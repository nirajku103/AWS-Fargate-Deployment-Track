
on:
  push:
    paths-ignore:
      - 'terraform/**'
    branches:
      - main

env:
  AWS_REGION: eu-west-1
  ECR_REPO_SERVICE1: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-1.amazonaws.com/service1
  ECR_REPO_SERVICE2: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-1.amazonaws.com/service2
  ECS_CLUSTER: dev-ecs-cluster
  ECS_SERVICE1: dev-ecs-cluster-service1
  ECS_SERVICE2: dev-ecs-cluster-service2
  TASK_DEFINITION1: services/service1/ecs-task-def.json
  TASK_DEFINITION2: services/service2/ecs-task-def.json

permissions:
  id-token: write
  contents: read

jobs:
  terraform-apply:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest
      
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v3
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: ${{ secrets.AWS_REGION }}
          # role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          # aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Generate Unique Image Tag
        run: echo "IMAGE_TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Build and Push Docker Image for Service 1
        run: |
          cd services/service1
          docker build -t service1:$IMAGE_TAG .
          docker tag service1:$IMAGE_TAG $ECR_REPO_SERVICE1:$IMAGE_TAG
          docker push $ECR_REPO_SERVICE1:$IMAGE_TAG

      - name: Build and Push Docker Image for Service 2
        run: |
          cd services/service2
          docker build -t service2:$IMAGE_TAG .
          docker tag service2:$IMAGE_TAG $ECR_REPO_SERVICE2:$IMAGE_TAG
          docker push $ECR_REPO_SERVICE2:$IMAGE_TAG

      - name: Running Terraform Apply with dev.tfvars and Image URIs
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve \
            -var-file=dev.tfvars \
            -var="service1_image=$ECR_REPO_SERVICE1:$IMAGE_TAG" \
            -var="service2_image=$ECR_REPO_SERVICE2:$IMAGE_TAG"
            

          # terraform destroy -auto-approve \
          #   -var-file=dev.tfvars \
          #   -var="image_uri=$ECR_REPO_APP:$IMAGE_TAG"
